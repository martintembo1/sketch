
const crypto = require("crypto");


class UID {


constructor() {
this.algorithm = "aes256";
this.Key = Buffer.from(crypto.randomBytes(32));
this.IV = crypto.randomBytes(16);
}

key(key) {
this.Key = crypto.createHash("sha256").update(key).digest();
}

iv(iv) {
this.IV = Buffer.alloc(16);
(crypto.createHash("sha256")
.update(iv).digest()).copy(this.IV);
}

cypher(string) {
string = typeof string === "number" ? string.toString() : string;
let cypher = crypto.createCipheriv(this.algorithm, this.Key, this.IV);
let result=cypher.update(string,"binary","hex");
return result+cypher.final("hex");
}

decypher(string) {
let cypher = crypto.createDecipheriv(this.algorithm, this.Key, this.IV);
let result=cypher.update(string,"hex","binary");
return result+cypher.final("binary");
}



}


module.exports = UID;
